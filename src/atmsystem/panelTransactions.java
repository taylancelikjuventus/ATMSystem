/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atmsystem;

import java.awt.Dimension;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author SeeMonster
 */
public class panelTransactions extends javax.swing.JPanel {

    /**
     * Creates new form panelBalance
     */
    Connection con;
    PreparedStatement ps;
    ResultSet res;
    String curbal = "";
    String accno;

    public panelTransactions(String accno) {

        this.accno = accno;
        initComponents();

    }

    //functions
    public void returnBalance() {
        
        //clear table
       DefaultTableModel dt = ((DefaultTableModel) balanceTable.getModel()) ;
            while(dt.getRowCount()>0)
               dt.removeRow(0);
        
       //disable editable     
       balanceTable.setEnabled(false);
       balanceTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
       balanceTable.getColumnModel().getColumn(0).setResizable(true);
        try {
            con = DBConnection.connecttoDB();
            ps = con.prepareStatement("select * from transactions WHERE accno=?");
            ps.setString(1, this.accno);
            res = ps.executeQuery();

            int i = 0;
            String balance = "0";
            while (res.next()) {

                String tid = res.getString(1).trim();
                String accno = res.getString(2).trim();
                String fromaccno = res.getString(3).trim();
                String toaccno = res.getString(4).trim();
                String deposit = res.getString(5).trim();
                String withdraw = res.getString(6).trim();
                String transfer = res.getString(7).trim();
                balance = res.getString(8).trim();
                String datetime = res.getString(9).trim();

                //System.out.println(fname);
                //table model
                DefaultTableModel dtm = (DefaultTableModel) balanceTable.getModel();
                
                dtm.setColumnIdentifiers(new String[]{"Row", "Account No", "From", "To", "Deposit", "Withdraw", "Transfer", "Balance", "Date/Time"});
               
                dtm.insertRow(i, new String[]{tid, accno, fromaccno, toaccno, deposit, withdraw, transfer, balance, datetime});

                balanceTable.setModel(dtm);

                i++; //insert if there is other rows
            }

            balanceLabel.setText("Current Balance : " + balance);

            ps.close();
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(panelBalance.class.getName()).log(Level.SEVERE, null, ex);
        }

        //show current balance
        balanceLabel.setText("Current Balance :" + curbal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        upbalanceLabel = new javax.swing.JLabel();
        balanceLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        buttonPrint = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();        
        balanceTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("List of All Transactions");

        upbalanceLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        upbalanceLabel.setText("Message :");

        balanceLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        balanceLabel.setText("Current Balance :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Details");

        buttonPrint.setText("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });

        balanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Row", "Account No", "First Name", "Last Name", "Balance", "Withdraw", "Deposit", "Date-Time"
            }
        ));
     

        jScrollPane2.setViewportView(balanceTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(709, 709, 709))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(buttonPrint))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE))
                            .addGap(437, 437, 437)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(upbalanceLabel)
                    .addComponent(balanceLabel)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(balanceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPrint)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upbalanceLabel)
                        .addGap(41, 41, 41))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        try {
            // TODO add your handling code here:

            LocalDateTime time = LocalDateTime.now();
            balanceTable.print(JTable.PrintMode.FIT_WIDTH, new MessageFormat("All Transactions Of Account"),
                    new MessageFormat("Date : " + time));
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, "Cannot be printed " + ex.getMessage());
        }
    }//GEN-LAST:event_buttonPrintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JTable balanceTable;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel upbalanceLabel;
    // End of variables declaration//GEN-END:variables
}
